android.support.v4.app.BackStackRecord -> android.support.v4.app.a:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    void run() -> run
    void popFromBackStack$1385ff() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.b:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.c:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState$79e5e33f() -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged$1385ff() -> e
    void onActivityResult$6eb84b52() -> f
    android.view.LayoutInflater getLayoutInflater$2ee30c11() -> g
    void onInflate$423a76cd() -> h
    void onAttach$63a22f9() -> i
    android.view.animation.Animation onCreateAnimation$24236ca7() -> j
    void onViewCreated$65f1d89() -> k
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onLowMemory() -> onLowMemory
    void initState() -> l
    void onDetach() -> m
    void onDestroyOptionsMenu() -> n
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void performCreate(android.os.Bundle) -> a
    android.view.View performCreateView$469ccb8a() -> o
    void performActivityCreated$79e5e33f() -> p
    void performStart() -> q
    void performResume() -> r
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> s
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    boolean performOptionsItemSelected(android.view.MenuItem) -> a
    boolean performContextItemSelected(android.view.MenuItem) -> b
    void performOptionsMenuClosed(android.view.Menu) -> b
    void performSaveInstanceState(android.os.Bundle) -> b
    void performPause() -> t
    void performStop() -> u
    void performReallyStop() -> v
    void performDestroyView() -> w
    void performDestroy() -> x
android.support.v4.app.Fragment$1 -> android.support.v4.app.d:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.e:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.f:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    void supportInvalidateOptionsMenu() -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onAttachFragment$65850823() -> c
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager$2cd5ab55(java.lang.String) -> b
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.g:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.m:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation$376f30fd(float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation$424ea1bd(float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> a
    void moveToState$2563266(int) -> d
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> r
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> s
    void enqueueAction$574583f(java.lang.Runnable) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> d
    void reportBackStackChanged() -> t
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    java.util.ArrayList retainNonConfig() -> e
    void saveFragmentViewState(android.support.v4.app.Fragment) -> b
    android.os.Parcelable saveAllState() -> f
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> g
    void dispatchCreate() -> h
    void dispatchActivityCreated() -> i
    void dispatchStart() -> j
    void dispatchResume() -> k
    void dispatchPause() -> l
    void dispatchStop() -> m
    void dispatchReallyStop() -> n
    void dispatchDestroyView() -> o
    void dispatchDestroy() -> p
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> q
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.n:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.o:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.p:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.q:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> a
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.r:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.s:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.t:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.u:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.v:
    android.support.v4.content.Loader onCreateLoader$e57f803() -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.w:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.x:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void stop() -> a
    void destroy() -> b
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump$ec96877$79f041d6(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.y:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.z:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void stopLoading() -> b
    void reset() -> c
    java.lang.String toString() -> toString
    void dump$ec96877(java.lang.String,java.io.PrintWriter) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers$79c6ddc0(android.view.KeyEvent) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers$2e71581f(int,int,int,int) -> a
    int normalizeMetaState(int) -> c
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers$255f299(int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.r:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.s:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.v:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void destroyItem$30510aeb() -> b
    boolean isViewFromObject$171eb1dd() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.w:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.x:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> b
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText$7a69ae8(int) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.y:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.z:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.aa:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ab:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.ac:
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ad:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ae:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.af:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.ag:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ah:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ai:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ak:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.al:
    long getFrameTime() -> a
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.am:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.an:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ao:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ap:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility$5359dc9a(android.view.View) -> d
    void setLayerType$7672597b(android.view.View,int) -> b
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.aq:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void initViewPager() -> f
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> a
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> b
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem$3af7e890(int) -> b
    void dataSetChanged() -> c
    void populate() -> d
    void populate(int) -> c
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild$31e08638() -> g
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> d
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> e
    void onPageScrolled$486775f1(int,float) -> a
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean arrowScroll(int) -> f
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000$b020504(android.support.v4.view.ViewPager) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> b
    int access$300(android.support.v4.view.ViewPager) -> c
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ax:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ay:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.az:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ba:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bb:
    void onPageScrolled$486775f1(int,float) -> a
    void onPageSelected$13462e() -> a
    void onPageScrollStateChanged(int) -> a
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bc:
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bd:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.be:
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bf:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.f:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo$f3a5639() -> b
    boolean performAction$5985f823() -> c
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> d
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.g:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.i:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.j:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.k:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.l:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.m:
    java.lang.Object createAccessibilityNodeInfo$54cf32c4() -> c
    boolean performAction$5985f823() -> a
    java.util.List findAccessibilityNodeInfosByText$2393931d() -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
com.dodo.wbbshoutbox.codebot.Login -> com.dodo.wbbshoutbox.codebot.Login:
    void onCreate(android.os.Bundle) -> onCreate
    void login() -> a
com.dodo.wbbshoutbox.codebot.Login$1 -> com.dodo.wbbshoutbox.codebot.a:
    com.dodo.wbbshoutbox.codebot.Login this$0 -> a
    void onClick(android.view.View) -> onClick
com.dodo.wbbshoutbox.codebot.Login$2 -> com.dodo.wbbshoutbox.codebot.b:
    com.dodo.wbbshoutbox.codebot.Login this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure$7823fa96(java.lang.Throwable) -> a
com.dodo.wbbshoutbox.codebot.MainActivity -> com.dodo.wbbshoutbox.codebot.MainActivity:
    java.lang.String baseUrl -> a
    com.loopj.android.http.AsyncHttpClient client2 -> b
    java.lang.String version -> c
    int loggedIn -> d
    int requireLogin -> e
    int timeoutchat -> f
    int autorefresh -> g
    int showTime -> h
    int refreshanimation -> i
    int changechatdirection -> j
    android.view.Menu menucopy -> k
    android.content.Context context -> l
    com.loopj.android.http.PersistentCookieStore myCookieStore -> m
    android.widget.TextView Usernamefield -> n
    android.widget.Button Sendbutton -> o
    android.widget.Button Refreshbutton -> p
    android.widget.ProgressBar pbReadChat -> q
    android.widget.TextView lblVerlauf -> r
    android.widget.TextView lblAutoRefresh -> s
    java.lang.Runnable runable -> t
    android.os.Handler mHandler -> u
    java.lang.Runnable rTimeout -> v
    android.os.Handler mTimeout -> w
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void updateMenu() -> a
    void alertBoxLocked(java.lang.String,java.lang.String) -> a
    void refresh() -> b
    void autorefresh() -> g
    void send() -> c
    void timeout() -> d
    void read(java.lang.String) -> a
    java.lang.String umkehren(java.lang.String) -> b
    void getRequest(java.lang.String) -> c
    void autorefresh_set() -> e
    void setTextSize() -> f
com.dodo.wbbshoutbox.codebot.MainActivity$1 -> com.dodo.wbbshoutbox.codebot.c:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dodo.wbbshoutbox.codebot.MainActivity$10 -> com.dodo.wbbshoutbox.codebot.d:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure$7823fa96(java.lang.Throwable) -> a
com.dodo.wbbshoutbox.codebot.MainActivity$11 -> com.dodo.wbbshoutbox.codebot.e:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
    void onFailure$7823fa96(java.lang.Throwable) -> a
com.dodo.wbbshoutbox.codebot.MainActivity$2 -> com.dodo.wbbshoutbox.codebot.f:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dodo.wbbshoutbox.codebot.MainActivity$3 -> com.dodo.wbbshoutbox.codebot.g:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.dodo.wbbshoutbox.codebot.MainActivity$4 -> com.dodo.wbbshoutbox.codebot.h:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onSuccess(java.lang.String) -> a
com.dodo.wbbshoutbox.codebot.MainActivity$5 -> com.dodo.wbbshoutbox.codebot.i:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.dodo.wbbshoutbox.codebot.MainActivity$7 -> com.dodo.wbbshoutbox.codebot.j:
    void onSuccess(java.lang.String) -> a
    void onFailure$7823fa96(java.lang.Throwable) -> a
com.dodo.wbbshoutbox.codebot.MainActivity$8 -> com.dodo.wbbshoutbox.codebot.k:
    void run() -> run
com.dodo.wbbshoutbox.codebot.MainActivity$9 -> com.dodo.wbbshoutbox.codebot.l:
    com.dodo.wbbshoutbox.codebot.MainActivity this$0 -> a
    android.widget.Button val$cmdSend -> b
    void run() -> run
com.dodo.wbbshoutbox.codebot.ReadChat -> com.dodo.wbbshoutbox.codebot.m:
    java.util.ArrayList usernames -> a
    java.util.ArrayList messages -> b
    java.util.ArrayList times -> c
    android.content.Context context -> d
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.dodo.wbbshoutbox.codebot.Request -> com.dodo.wbbshoutbox.codebot.n:
    com.loopj.android.http.AsyncHttpClient client -> a
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
com.dodo.wbbshoutbox.codebot.Settings2 -> com.dodo.wbbshoutbox.codebot.Settings2:
    int prefs -> b
    android.content.SharedPreferences SP -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    int access$0() -> a
com.dodo.wbbshoutbox.codebot.Settings2$PF -> com.dodo.wbbshoutbox.codebot.o:
    void onCreate(android.os.Bundle) -> onCreate
com.dodo.wbbshoutbox.codebot.Smilies -> com.dodo.wbbshoutbox.codebot.p:
    android.text.Spannable$Factory spannableFactory -> a
    java.util.Map emoticons -> b
    void addPattern(java.util.Map,java.lang.String,int) -> a
    android.text.Spannable getSmiledText(android.content.Context,java.lang.CharSequence) -> a
com.dodo.wbbshoutbox.codebot.UserData -> com.dodo.wbbshoutbox.codebot.q:
    java.lang.String readPref(java.lang.String,android.content.Context) -> a
    void writePref(java.lang.String,java.lang.String,android.content.Context) -> a
    void deletePref(java.lang.String,android.content.Context) -> b
com.loopj.android.http.AsyncHttpClient -> com.a.a.a.a:
    int maxConnections -> a
    int socketTimeout -> b
    org.apache.http.impl.client.DefaultHttpClient httpClient -> c
    org.apache.http.protocol.HttpContext httpContext -> d
    java.util.concurrent.ThreadPoolExecutor threadPool -> e
    java.util.Map requestMap -> f
    java.util.Map clientHeaderMap -> g
    void setCookieStore(org.apache.http.client.CookieStore) -> a
    void setUserAgent(java.lang.String) -> a
    void get(java.lang.String,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    void get$7ccc3b(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> c
    void post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.AsyncHttpResponseHandler) -> b
    void sendRequest$1b2b6c40(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,com.loopj.android.http.AsyncHttpResponseHandler) -> a
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> a
com.loopj.android.http.AsyncHttpClient$1 -> com.a.a.a.b:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.a.a.a.c:
    com.loopj.android.http.AsyncHttpClient this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.a.a.a.d:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.loopj.android.http.AsyncHttpRequest -> com.a.a.a.e:
    org.apache.http.impl.client.AbstractHttpClient client -> a
    org.apache.http.protocol.HttpContext context -> b
    org.apache.http.client.methods.HttpUriRequest request -> c
    com.loopj.android.http.AsyncHttpResponseHandler responseHandler -> d
    boolean isBinaryRequest -> e
    int executionCount -> f
    void run() -> run
com.loopj.android.http.AsyncHttpResponseHandler -> com.a.a.a.f:
    android.os.Handler handler -> a
    void onSuccess(java.lang.String) -> a
    void onFailure$7823fa96(java.lang.Throwable) -> a
    void sendFailureMessage(java.lang.Throwable,java.lang.String) -> a
    void sendFailureMessage(java.lang.Throwable,byte[]) -> a
    void sendStartMessage() -> a
    void sendFinishMessage() -> b
    void handleMessage(android.os.Message) -> a
    void sendMessage(android.os.Message) -> b
    android.os.Message obtainMessage(int,java.lang.Object) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.AsyncHttpResponseHandler$1 -> com.a.a.a.g:
    com.loopj.android.http.AsyncHttpResponseHandler this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.BinaryHttpResponseHandler -> com.a.a.a.h:
    java.lang.String[] mAllowedContentTypes -> a
    void sendFailureMessage(java.lang.Throwable,byte[]) -> a
    void handleMessage(android.os.Message) -> a
    void sendResponseMessage(org.apache.http.HttpResponse) -> a
com.loopj.android.http.PersistentCookieStore -> com.a.a.a.i:
    java.util.concurrent.ConcurrentHashMap cookies -> a
    android.content.SharedPreferences cookiePrefs -> b
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> a
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> a
    java.lang.String byteArrayToHexString(byte[]) -> a
com.loopj.android.http.RequestParams -> com.a.a.a.j:
    java.lang.String ENCODING -> d
    java.util.concurrent.ConcurrentHashMap urlParams -> a
    java.util.concurrent.ConcurrentHashMap fileParams -> b
    java.util.concurrent.ConcurrentHashMap urlParamsWithArray -> c
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
    org.apache.http.HttpEntity getEntity() -> a
    java.util.List getParamsList() -> c
    java.lang.String getParamString() -> b
com.loopj.android.http.RequestParams$FileWrapper -> com.a.a.a.k:
    java.io.InputStream inputStream -> a
    java.lang.String fileName -> b
    java.lang.String contentType -> c
    java.lang.String getFileName() -> a
com.loopj.android.http.RetryHandler -> com.a.a.a.l:
    java.util.HashSet exceptionWhitelist -> a
    java.util.HashSet exceptionBlacklist -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> a
com.loopj.android.http.SerializableCookie -> com.a.a.a.m:
    org.apache.http.cookie.Cookie cookie -> a
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> b
    org.apache.http.cookie.Cookie getCookie() -> a
com.loopj.android.http.SimpleMultipartEntity -> com.a.a.a.n:
    char[] MULTIPART_CHARS -> d
    java.lang.String boundary -> e
    java.io.ByteArrayOutputStream out -> a
    boolean isSetLast -> b
    boolean isSetFirst -> c
    void writeFirstBoundaryIfNeeds() -> a
    void addPart(java.lang.String,java.lang.String) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,boolean) -> a
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String,boolean) -> a
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
org.jsoup.Connection -> org.jsoup.Connection:
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.Connection$Base -> org.jsoup.Connection$Base:
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.Connection$KeyVal -> org.jsoup.Connection$KeyVal:
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
org.jsoup.Connection$Method -> org.jsoup.Connection$Method:
    org.jsoup.Connection$Method GET -> GET
    org.jsoup.Connection$Method POST -> POST
    org.jsoup.Connection$Method[] $VALUES -> a
    org.jsoup.Connection$Method[] values() -> values
    org.jsoup.Connection$Method valueOf(java.lang.String) -> valueOf
org.jsoup.Connection$Request -> org.jsoup.Connection$Request:
    int timeout() -> timeout
    org.jsoup.Connection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
org.jsoup.Connection$Response -> org.jsoup.Connection$Response:
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
org.jsoup.HttpStatusException -> org.jsoup.HttpStatusException:
    int statusCode -> a
    java.lang.String url -> b
    int getStatusCode() -> getStatusCode
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.Jsoup -> org.jsoup.Jsoup:
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parse(java.lang.String) -> parse
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.File,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String) -> parse
    org.jsoup.nodes.Document parse(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> parse
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String) -> parseBodyFragment
    org.jsoup.nodes.Document parse(java.net.URL,int) -> parse
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,org.jsoup.safety.Whitelist) -> clean
    java.lang.String clean(java.lang.String,java.lang.String,org.jsoup.safety.Whitelist,org.jsoup.nodes.Document$OutputSettings) -> clean
    boolean isValid(java.lang.String,org.jsoup.safety.Whitelist) -> isValid
org.jsoup.UnsupportedMimeTypeException -> org.jsoup.UnsupportedMimeTypeException:
    java.lang.String mimeType -> a
    java.lang.String url -> b
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getUrl() -> getUrl
    java.lang.String toString() -> toString
org.jsoup.examples.HtmlToPlainText -> org.jsoup.examples.HtmlToPlainText:
    void main(java.lang.String[]) -> main
    java.lang.String getPlainText(org.jsoup.nodes.Element) -> getPlainText
org.jsoup.examples.HtmlToPlainText$FormattingVisitor -> org.jsoup.examples.a:
    int width -> b
    java.lang.StringBuilder accum -> c
    org.jsoup.examples.HtmlToPlainText this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    void append(java.lang.String) -> a
    java.lang.String toString() -> toString
org.jsoup.examples.ListLinks -> org.jsoup.examples.ListLinks:
    void main(java.lang.String[]) -> main
    void print(java.lang.String,java.lang.Object[]) -> a
    java.lang.String trim(java.lang.String,int) -> a
org.jsoup.helper.DataUtil -> org.jsoup.helper.DataUtil:
    java.util.regex.Pattern charsetPattern -> a
    org.jsoup.nodes.Document load(java.io.File,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String) -> load
    org.jsoup.nodes.Document load(java.io.InputStream,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> load
    org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser) -> a
    java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int) -> a
    java.lang.String getCharsetFromContentType(java.lang.String) -> a
org.jsoup.helper.DescendableLinkedList -> org.jsoup.helper.DescendableLinkedList:
    void push(java.lang.Object) -> push
    java.lang.Object peekLast() -> peekLast
    java.lang.Object pollLast() -> pollLast
    java.util.Iterator descendingIterator() -> descendingIterator
org.jsoup.helper.DescendableLinkedList$DescendingIterator -> org.jsoup.helper.a:
    java.util.ListIterator iter -> b
    org.jsoup.helper.DescendableLinkedList this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.jsoup.helper.HttpConnection -> org.jsoup.helper.HttpConnection:
    org.jsoup.Connection$Request req -> a
    org.jsoup.Connection$Response res -> b
    org.jsoup.Connection connect(java.lang.String) -> connect
    org.jsoup.Connection connect(java.net.URL) -> connect
    org.jsoup.Connection url(java.net.URL) -> url
    org.jsoup.Connection url(java.lang.String) -> url
    org.jsoup.Connection userAgent(java.lang.String) -> userAgent
    org.jsoup.Connection timeout(int) -> timeout
    org.jsoup.Connection maxBodySize(int) -> maxBodySize
    org.jsoup.Connection followRedirects(boolean) -> followRedirects
    org.jsoup.Connection referrer(java.lang.String) -> referrer
    org.jsoup.Connection method(org.jsoup.Connection$Method) -> method
    org.jsoup.Connection ignoreHttpErrors(boolean) -> ignoreHttpErrors
    org.jsoup.Connection ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.Connection data(java.lang.String,java.lang.String) -> data
    org.jsoup.Connection data(java.util.Map) -> data
    org.jsoup.Connection data(java.lang.String[]) -> data
    org.jsoup.Connection header(java.lang.String,java.lang.String) -> header
    org.jsoup.Connection cookie(java.lang.String,java.lang.String) -> cookie
    org.jsoup.Connection cookies(java.util.Map) -> cookies
    org.jsoup.Connection parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.nodes.Document get() -> get
    org.jsoup.nodes.Document post() -> post
    org.jsoup.Connection$Response execute() -> execute
    org.jsoup.Connection$Request request() -> request
    org.jsoup.Connection request(org.jsoup.Connection$Request) -> request
    org.jsoup.Connection$Response response() -> response
    org.jsoup.Connection response(org.jsoup.Connection$Response) -> response
org.jsoup.helper.HttpConnection$Base -> org.jsoup.helper.b:
    java.net.URL url -> a
    org.jsoup.Connection$Method method -> b
    java.util.Map headers -> c
    java.util.Map cookies -> d
    java.net.URL url() -> url
    org.jsoup.Connection$Base url(java.net.URL) -> url
    org.jsoup.Connection$Method method() -> method
    org.jsoup.Connection$Base method(org.jsoup.Connection$Method) -> method
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Base header(java.lang.String,java.lang.String) -> header
    boolean hasHeader(java.lang.String) -> hasHeader
    org.jsoup.Connection$Base removeHeader(java.lang.String) -> removeHeader
    java.util.Map headers() -> headers
    java.lang.String getHeaderCaseInsensitive(java.lang.String) -> a
    java.util.Map$Entry scanHeaders(java.lang.String) -> b
    java.lang.String cookie(java.lang.String) -> cookie
    org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String) -> cookie
    boolean hasCookie(java.lang.String) -> hasCookie
    org.jsoup.Connection$Base removeCookie(java.lang.String) -> removeCookie
    java.util.Map cookies() -> cookies
org.jsoup.helper.HttpConnection$KeyVal -> org.jsoup.helper.HttpConnection$KeyVal:
    java.lang.String key -> a
    java.lang.String value -> b
    org.jsoup.helper.HttpConnection$KeyVal create(java.lang.String,java.lang.String) -> create
    org.jsoup.helper.HttpConnection$KeyVal key(java.lang.String) -> key
    java.lang.String key() -> key
    org.jsoup.helper.HttpConnection$KeyVal value(java.lang.String) -> value
    java.lang.String value() -> value
    java.lang.String toString() -> toString
    org.jsoup.Connection$KeyVal value(java.lang.String) -> value
    org.jsoup.Connection$KeyVal key(java.lang.String) -> key
org.jsoup.helper.HttpConnection$Request -> org.jsoup.helper.HttpConnection$Request:
    int timeoutMilliseconds -> e
    int maxBodySizeBytes -> f
    boolean followRedirects -> g
    java.util.Collection data -> h
    boolean ignoreHttpErrors -> i
    boolean ignoreContentType -> j
    org.jsoup.parser.Parser parser -> k
    int timeout() -> timeout
    org.jsoup.helper.HttpConnection$Request timeout(int) -> timeout
    int maxBodySize() -> maxBodySize
    org.jsoup.Connection$Request maxBodySize(int) -> maxBodySize
    boolean followRedirects() -> followRedirects
    org.jsoup.Connection$Request followRedirects(boolean) -> followRedirects
    boolean ignoreHttpErrors() -> ignoreHttpErrors
    org.jsoup.Connection$Request ignoreHttpErrors(boolean) -> ignoreHttpErrors
    boolean ignoreContentType() -> ignoreContentType
    org.jsoup.Connection$Request ignoreContentType(boolean) -> ignoreContentType
    org.jsoup.helper.HttpConnection$Request data(org.jsoup.Connection$KeyVal) -> data
    java.util.Collection data() -> data
    org.jsoup.helper.HttpConnection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.parser.Parser parser() -> parser
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
    org.jsoup.Connection$Request parser(org.jsoup.parser.Parser) -> parser
    org.jsoup.Connection$Request data(org.jsoup.Connection$KeyVal) -> data
    org.jsoup.Connection$Request timeout(int) -> timeout
org.jsoup.helper.HttpConnection$Response -> org.jsoup.helper.HttpConnection$Response:
    int statusCode -> e
    java.lang.String statusMessage -> f
    java.nio.ByteBuffer byteData -> g
    java.lang.String charset -> h
    java.lang.String contentType -> i
    boolean executed -> j
    int numRedirects -> k
    org.jsoup.Connection$Request req -> l
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) -> a
    org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response) -> a
    int statusCode() -> statusCode
    java.lang.String statusMessage() -> statusMessage
    java.lang.String charset() -> charset
    java.lang.String contentType() -> contentType
    org.jsoup.nodes.Document parse() -> parse
    java.lang.String body() -> body
    byte[] bodyAsBytes() -> bodyAsBytes
    java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) -> b
    void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response) -> a
    void writePost(java.util.Collection,java.io.OutputStream) -> a
    void serialiseRequestUrl(org.jsoup.Connection$Request) -> c
    java.util.Map cookies() -> cookies
    boolean hasCookie(java.lang.String) -> hasCookie
    java.lang.String cookie(java.lang.String) -> cookie
    java.util.Map headers() -> headers
    boolean hasHeader(java.lang.String) -> hasHeader
    java.lang.String header(java.lang.String) -> header
    org.jsoup.Connection$Method method() -> method
    java.net.URL url() -> url
org.jsoup.helper.StringUtil -> org.jsoup.helper.StringUtil:
    java.lang.String[] padding -> a
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.String join(java.util.Iterator,java.lang.String) -> join
    java.lang.String padding(int) -> padding
    boolean isBlank(java.lang.String) -> isBlank
    boolean isNumeric(java.lang.String) -> isNumeric
    boolean isWhitespace(int) -> isWhitespace
    java.lang.String normaliseWhitespace(java.lang.String) -> normaliseWhitespace
    boolean in(java.lang.String,java.lang.String[]) -> in
org.jsoup.helper.Validate -> org.jsoup.helper.Validate:
    void notNull(java.lang.Object) -> notNull
    void notNull(java.lang.Object,java.lang.String) -> notNull
    void isTrue(boolean) -> isTrue
    void isTrue(boolean,java.lang.String) -> isTrue
    void isFalse(boolean) -> isFalse
    void isFalse(boolean,java.lang.String) -> isFalse
    void noNullElements(java.lang.Object[]) -> noNullElements
    void noNullElements(java.lang.Object[],java.lang.String) -> noNullElements
    void notEmpty(java.lang.String) -> notEmpty
    void notEmpty(java.lang.String,java.lang.String) -> notEmpty
    void fail(java.lang.String) -> fail
org.jsoup.nodes.Attribute -> org.jsoup.nodes.Attribute:
    java.lang.String key -> a
    java.lang.String value -> b
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    java.lang.String getValue() -> getValue
    java.lang.String setValue(java.lang.String) -> setValue
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String toString() -> toString
    org.jsoup.nodes.Attribute createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    boolean isDataAttribute() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attribute clone() -> clone
    java.lang.Object clone() -> clone
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object getValue() -> getValue
    java.lang.Object getKey() -> getKey
org.jsoup.nodes.Attributes -> org.jsoup.nodes.Attributes:
    java.util.LinkedHashMap attributes -> a
    java.lang.String get(java.lang.String) -> get
    void put(java.lang.String,java.lang.String) -> put
    void put(org.jsoup.nodes.Attribute) -> put
    void remove(java.lang.String) -> remove
    boolean hasKey(java.lang.String) -> hasKey
    int size() -> size
    void addAll(org.jsoup.nodes.Attributes) -> addAll
    java.util.Iterator iterator() -> iterator
    java.util.List asList() -> asList
    java.util.Map dataset() -> dataset
    java.lang.String html() -> html
    void html(java.lang.StringBuilder,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Attributes clone() -> clone
    java.lang.Object clone() -> clone
    java.util.LinkedHashMap access$100(org.jsoup.nodes.Attributes) -> a
    java.util.LinkedHashMap access$102(org.jsoup.nodes.Attributes,java.util.LinkedHashMap) -> a
    java.lang.String access$300(java.lang.String) -> a
org.jsoup.nodes.Attributes$Dataset -> org.jsoup.nodes.a:
    org.jsoup.nodes.Attributes this$0 -> a
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.jsoup.nodes.Attributes$Dataset$DatasetIterator -> org.jsoup.nodes.b:
    java.util.Iterator attrIter -> b
    org.jsoup.nodes.Attribute attr -> c
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
org.jsoup.nodes.Attributes$Dataset$EntrySet -> org.jsoup.nodes.c:
    org.jsoup.nodes.Attributes$Dataset this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.jsoup.nodes.Comment -> org.jsoup.nodes.Comment:
    java.lang.String nodeName() -> nodeName
    java.lang.String getData() -> getData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
org.jsoup.nodes.DataNode -> org.jsoup.nodes.DataNode:
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeData() -> getWholeData
    org.jsoup.nodes.DataNode setWholeData(java.lang.String) -> setWholeData
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    org.jsoup.nodes.DataNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
org.jsoup.nodes.Document -> org.jsoup.nodes.Document:
    org.jsoup.nodes.Document$OutputSettings outputSettings -> f
    org.jsoup.nodes.Document$QuirksMode quirksMode -> g
    org.jsoup.nodes.Document createShell(java.lang.String) -> createShell
    org.jsoup.nodes.Element head() -> head
    org.jsoup.nodes.Element body() -> body
    java.lang.String title() -> title
    void title(java.lang.String) -> title
    org.jsoup.nodes.Element createElement(java.lang.String) -> createElement
    org.jsoup.nodes.Document normalise() -> normalise
    void normaliseTextNodes(org.jsoup.nodes.Element) -> b
    void normaliseStructure(java.lang.String,org.jsoup.nodes.Element) -> a
    org.jsoup.nodes.Element findFirstElementByTagName(java.lang.String,org.jsoup.nodes.Node) -> a
    java.lang.String outerHtml() -> outerHtml
    org.jsoup.nodes.Element text(java.lang.String) -> text
    java.lang.String nodeName() -> nodeName
    org.jsoup.nodes.Document clone() -> clone
    org.jsoup.nodes.Document$OutputSettings outputSettings() -> outputSettings
    org.jsoup.nodes.Document outputSettings(org.jsoup.nodes.Document$OutputSettings) -> outputSettings
    org.jsoup.nodes.Document$QuirksMode quirksMode() -> quirksMode
    org.jsoup.nodes.Document quirksMode(org.jsoup.nodes.Document$QuirksMode) -> quirksMode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$OutputSettings -> org.jsoup.nodes.Document$OutputSettings:
    org.jsoup.nodes.Entities$EscapeMode escapeMode -> a
    java.nio.charset.Charset charset -> b
    java.nio.charset.CharsetEncoder charsetEncoder -> c
    boolean prettyPrint -> d
    boolean outline -> e
    int indentAmount -> f
    org.jsoup.nodes.Entities$EscapeMode escapeMode() -> escapeMode
    org.jsoup.nodes.Document$OutputSettings escapeMode(org.jsoup.nodes.Entities$EscapeMode) -> escapeMode
    java.nio.charset.Charset charset() -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.nio.charset.Charset) -> charset
    org.jsoup.nodes.Document$OutputSettings charset(java.lang.String) -> charset
    java.nio.charset.CharsetEncoder encoder() -> a
    boolean prettyPrint() -> prettyPrint
    org.jsoup.nodes.Document$OutputSettings prettyPrint(boolean) -> prettyPrint
    boolean outline() -> outline
    org.jsoup.nodes.Document$OutputSettings outline(boolean) -> outline
    int indentAmount() -> indentAmount
    org.jsoup.nodes.Document$OutputSettings indentAmount(int) -> indentAmount
    org.jsoup.nodes.Document$OutputSettings clone() -> clone
    java.lang.Object clone() -> clone
org.jsoup.nodes.Document$QuirksMode -> org.jsoup.nodes.Document$QuirksMode:
    org.jsoup.nodes.Document$QuirksMode noQuirks -> noQuirks
    org.jsoup.nodes.Document$QuirksMode quirks -> quirks
    org.jsoup.nodes.Document$QuirksMode limitedQuirks -> limitedQuirks
    org.jsoup.nodes.Document$QuirksMode[] $VALUES -> a
    org.jsoup.nodes.Document$QuirksMode[] values() -> values
    org.jsoup.nodes.Document$QuirksMode valueOf(java.lang.String) -> valueOf
org.jsoup.nodes.DocumentType -> org.jsoup.nodes.DocumentType:
    java.lang.String nodeName() -> nodeName
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
org.jsoup.nodes.Element -> org.jsoup.nodes.Element:
    org.jsoup.parser.Tag tag -> f
    java.util.Set classNames -> g
    java.lang.String nodeName() -> nodeName
    java.lang.String tagName() -> tagName
    org.jsoup.nodes.Element tagName(java.lang.String) -> tagName
    org.jsoup.parser.Tag tag() -> tag
    boolean isBlock() -> isBlock
    java.lang.String id() -> id
    org.jsoup.nodes.Element attr(java.lang.String,java.lang.String) -> attr
    java.util.Map dataset() -> dataset
    org.jsoup.nodes.Element parent() -> parent
    org.jsoup.select.Elements parents() -> parents
    org.jsoup.nodes.Element child(int) -> child
    org.jsoup.select.Elements children() -> children
    java.util.List textNodes() -> textNodes
    java.util.List dataNodes() -> dataNodes
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.nodes.Element appendChild(org.jsoup.nodes.Node) -> appendChild
    org.jsoup.nodes.Element prependChild(org.jsoup.nodes.Node) -> prependChild
    org.jsoup.nodes.Element insertChildren(int,java.util.Collection) -> insertChildren
    org.jsoup.nodes.Element appendElement(java.lang.String) -> appendElement
    org.jsoup.nodes.Element prependElement(java.lang.String) -> prependElement
    org.jsoup.nodes.Element appendText(java.lang.String) -> appendText
    org.jsoup.nodes.Element prependText(java.lang.String) -> prependText
    org.jsoup.nodes.Element append(java.lang.String) -> append
    org.jsoup.nodes.Element prepend(java.lang.String) -> prepend
    org.jsoup.nodes.Element before(java.lang.String) -> before
    org.jsoup.nodes.Element before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Element after(java.lang.String) -> after
    org.jsoup.nodes.Element after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Element empty() -> empty
    org.jsoup.nodes.Element wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements siblingElements() -> siblingElements
    org.jsoup.nodes.Element nextElementSibling() -> nextElementSibling
    org.jsoup.nodes.Element previousElementSibling() -> previousElementSibling
    org.jsoup.nodes.Element firstElementSibling() -> firstElementSibling
    java.lang.Integer elementSiblingIndex() -> elementSiblingIndex
    org.jsoup.nodes.Element lastElementSibling() -> lastElementSibling
    java.lang.Integer indexInList(org.jsoup.nodes.Element,java.util.List) -> a
    org.jsoup.select.Elements getElementsByTag(java.lang.String) -> getElementsByTag
    org.jsoup.nodes.Element getElementById(java.lang.String) -> getElementById
    org.jsoup.select.Elements getElementsByClass(java.lang.String) -> getElementsByClass
    org.jsoup.select.Elements getElementsByAttribute(java.lang.String) -> getElementsByAttribute
    org.jsoup.select.Elements getElementsByAttributeStarting(java.lang.String) -> getElementsByAttributeStarting
    org.jsoup.select.Elements getElementsByAttributeValue(java.lang.String,java.lang.String) -> getElementsByAttributeValue
    org.jsoup.select.Elements getElementsByAttributeValueNot(java.lang.String,java.lang.String) -> getElementsByAttributeValueNot
    org.jsoup.select.Elements getElementsByAttributeValueStarting(java.lang.String,java.lang.String) -> getElementsByAttributeValueStarting
    org.jsoup.select.Elements getElementsByAttributeValueEnding(java.lang.String,java.lang.String) -> getElementsByAttributeValueEnding
    org.jsoup.select.Elements getElementsByAttributeValueContaining(java.lang.String,java.lang.String) -> getElementsByAttributeValueContaining
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.util.regex.Pattern) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByAttributeValueMatching(java.lang.String,java.lang.String) -> getElementsByAttributeValueMatching
    org.jsoup.select.Elements getElementsByIndexLessThan(int) -> getElementsByIndexLessThan
    org.jsoup.select.Elements getElementsByIndexGreaterThan(int) -> getElementsByIndexGreaterThan
    org.jsoup.select.Elements getElementsByIndexEquals(int) -> getElementsByIndexEquals
    org.jsoup.select.Elements getElementsContainingText(java.lang.String) -> getElementsContainingText
    org.jsoup.select.Elements getElementsContainingOwnText(java.lang.String) -> getElementsContainingOwnText
    org.jsoup.select.Elements getElementsMatchingText(java.util.regex.Pattern) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingText(java.lang.String) -> getElementsMatchingText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.util.regex.Pattern) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getElementsMatchingOwnText(java.lang.String) -> getElementsMatchingOwnText
    org.jsoup.select.Elements getAllElements() -> getAllElements
    java.lang.String text() -> text
    java.lang.String ownText() -> ownText
    void ownText(java.lang.StringBuilder) -> b
    void appendNormalisedText(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> b
    boolean preserveWhitespace(org.jsoup.nodes.Node) -> a
    org.jsoup.nodes.Element text(java.lang.String) -> text
    boolean hasText() -> hasText
    java.lang.String data() -> data
    java.lang.String className() -> className
    java.util.Set classNames() -> classNames
    org.jsoup.nodes.Element classNames(java.util.Set) -> classNames
    boolean hasClass(java.lang.String) -> hasClass
    org.jsoup.nodes.Element addClass(java.lang.String) -> addClass
    org.jsoup.nodes.Element removeClass(java.lang.String) -> removeClass
    org.jsoup.nodes.Element toggleClass(java.lang.String) -> toggleClass
    java.lang.String val() -> val
    org.jsoup.nodes.Element val(java.lang.String) -> val
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String html() -> html
    void html(java.lang.StringBuilder) -> c
    org.jsoup.nodes.Element html(java.lang.String) -> html
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element clone() -> clone
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    java.lang.Object clone() -> clone
    void access$000(java.lang.StringBuilder,org.jsoup.nodes.TextNode) -> a
    org.jsoup.parser.Tag access$100(org.jsoup.nodes.Element) -> a
org.jsoup.nodes.Element$1 -> org.jsoup.nodes.d:
    java.lang.StringBuilder val$accum -> a
    org.jsoup.nodes.Element this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Entities -> org.jsoup.nodes.Entities:
    java.util.Map full -> a
    java.util.Map xhtmlByVal -> b
    java.util.Map base -> c
    java.util.Map baseByVal -> d
    java.util.Map fullByVal -> e
    java.util.regex.Pattern unescapePattern -> f
    java.util.regex.Pattern strictUnescapePattern -> g
    java.lang.Object[][] xhtmlArray -> h
    boolean isNamedEntity(java.lang.String) -> isNamedEntity
    boolean isBaseNamedEntity(java.lang.String) -> isBaseNamedEntity
    java.lang.Character getCharacterByName(java.lang.String) -> getCharacterByName
    java.lang.String escape(java.lang.String,org.jsoup.nodes.Document$OutputSettings) -> a
    java.lang.String unescape(java.lang.String) -> a
    java.lang.String unescape$185c6b75(java.lang.String) -> b
    java.util.Map loadEntities(java.lang.String) -> c
    java.util.Map toCharacterKey(java.util.Map) -> a
    java.util.Map access$000() -> a
    java.util.Map access$100() -> b
    java.util.Map access$200() -> c
org.jsoup.nodes.Entities$EscapeMode -> org.jsoup.nodes.Entities$EscapeMode:
    org.jsoup.nodes.Entities$EscapeMode xhtml -> xhtml
    org.jsoup.nodes.Entities$EscapeMode base -> base
    org.jsoup.nodes.Entities$EscapeMode extended -> extended
    java.util.Map map -> a
    org.jsoup.nodes.Entities$EscapeMode[] $VALUES -> b
    org.jsoup.nodes.Entities$EscapeMode[] values() -> values
    org.jsoup.nodes.Entities$EscapeMode valueOf(java.lang.String) -> valueOf
    java.util.Map getMap() -> getMap
org.jsoup.nodes.Node -> org.jsoup.nodes.Node:
    org.jsoup.nodes.Node parentNode -> a
    java.util.List childNodes -> b
    org.jsoup.nodes.Attributes attributes -> c
    java.lang.String baseUri -> d
    int siblingIndex -> e
    java.lang.String nodeName() -> nodeName
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String baseUri() -> baseUri
    void setBaseUri(java.lang.String) -> setBaseUri
    java.lang.String absUrl(java.lang.String) -> absUrl
    org.jsoup.nodes.Node childNode(int) -> childNode
    java.util.List childNodes() -> childNodes
    java.util.List childNodesCopy() -> childNodesCopy
    int childNodeSize() -> childNodeSize
    org.jsoup.nodes.Node parent() -> parent
    org.jsoup.nodes.Document ownerDocument() -> ownerDocument
    void remove() -> remove
    org.jsoup.nodes.Node before(java.lang.String) -> before
    org.jsoup.nodes.Node before(org.jsoup.nodes.Node) -> before
    org.jsoup.nodes.Node after(java.lang.String) -> after
    org.jsoup.nodes.Node after(org.jsoup.nodes.Node) -> after
    void addSiblingHtml(int,java.lang.String) -> a
    org.jsoup.nodes.Node wrap(java.lang.String) -> wrap
    org.jsoup.nodes.Node unwrap() -> unwrap
    void replaceWith(org.jsoup.nodes.Node) -> replaceWith
    void replaceChild(org.jsoup.nodes.Node,org.jsoup.nodes.Node) -> a
    void removeChild(org.jsoup.nodes.Node) -> b
    void addChildren(org.jsoup.nodes.Node[]) -> a
    void addChildren(int,org.jsoup.nodes.Node[]) -> a
    void reparentChild(org.jsoup.nodes.Node) -> a
    void reindexChildren() -> a
    java.util.List siblingNodes() -> siblingNodes
    org.jsoup.nodes.Node nextSibling() -> nextSibling
    org.jsoup.nodes.Node previousSibling() -> previousSibling
    int siblingIndex() -> siblingIndex
    org.jsoup.nodes.Node traverse(org.jsoup.select.NodeVisitor) -> traverse
    java.lang.String outerHtml() -> outerHtml
    void outerHtml(java.lang.StringBuilder) -> a
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    void indent(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Node clone() -> clone
    org.jsoup.nodes.Node doClone(org.jsoup.nodes.Node) -> c
    java.lang.Object clone() -> clone
org.jsoup.nodes.Node$1 -> org.jsoup.nodes.e:
    java.lang.String val$baseUri -> a
    org.jsoup.nodes.Node this$0 -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.Node$OuterHtmlVisitor -> org.jsoup.nodes.f:
    java.lang.StringBuilder accum -> a
    org.jsoup.nodes.Document$OutputSettings out -> b
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.nodes.TextNode -> org.jsoup.nodes.TextNode:
    java.lang.String text -> f
    java.lang.String nodeName() -> nodeName
    java.lang.String text() -> text
    org.jsoup.nodes.TextNode text(java.lang.String) -> text
    java.lang.String getWholeText() -> getWholeText
    boolean isBlank() -> isBlank
    org.jsoup.nodes.TextNode splitText(int) -> splitText
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
    org.jsoup.nodes.TextNode createFromEncoded(java.lang.String,java.lang.String) -> createFromEncoded
    java.lang.String normaliseWhitespace(java.lang.String) -> a
    java.lang.String stripLeadingWhitespace(java.lang.String) -> b
    boolean lastCharIsWhitespace(java.lang.StringBuilder) -> b
    void ensureAttributes() -> a
    java.lang.String attr(java.lang.String) -> attr
    org.jsoup.nodes.Attributes attributes() -> attributes
    org.jsoup.nodes.Node attr(java.lang.String,java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.nodes.Node removeAttr(java.lang.String) -> removeAttr
    java.lang.String absUrl(java.lang.String) -> absUrl
org.jsoup.nodes.XmlDeclaration -> org.jsoup.nodes.XmlDeclaration:
    boolean isProcessingInstruction -> f
    java.lang.String nodeName() -> nodeName
    java.lang.String getWholeDeclaration() -> getWholeDeclaration
    void outerHtmlHead(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> a
    void outerHtmlTail(java.lang.StringBuilder,int,org.jsoup.nodes.Document$OutputSettings) -> b
    java.lang.String toString() -> toString
org.jsoup.parser.CharacterReader -> org.jsoup.parser.a:
    char[] input -> a
    int length -> b
    int pos -> c
    int mark -> d
    int pos() -> a
    boolean isEmpty() -> b
    char current() -> c
    char consume() -> d
    void unconsume() -> e
    void advance() -> f
    void mark() -> g
    void rewindToMark() -> h
    int nextIndexOf(java.lang.CharSequence) -> a
    java.lang.String consumeTo(char) -> a
    java.lang.String consumeTo(java.lang.String) -> a
    java.lang.String consumeToAny(char[]) -> a
    java.lang.String consumeToEnd() -> o
    java.lang.String consumeLetterSequence() -> i
    java.lang.String consumeLetterThenDigitSequence() -> j
    java.lang.String consumeHexSequence() -> k
    java.lang.String consumeDigitSequence() -> l
    boolean matches(char) -> b
    boolean matchesAny(char[]) -> b
    boolean matchesLetter() -> m
    boolean matchesDigit() -> n
    boolean matchConsume(java.lang.String) -> b
    boolean matchConsumeIgnoreCase(java.lang.String) -> c
    boolean containsIgnoreCase(java.lang.String) -> d
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilder -> org.jsoup.parser.b:
    org.jsoup.parser.HtmlTreeBuilderState state -> i
    org.jsoup.parser.HtmlTreeBuilderState originalState -> j
    boolean baseUriSetFromDoc -> k
    org.jsoup.nodes.Element headElement -> l
    org.jsoup.nodes.Element formElement -> m
    org.jsoup.nodes.Element contextElement -> n
    org.jsoup.helper.DescendableLinkedList formattingElements -> o
    java.util.List pendingTableCharacters -> p
    boolean framesetOk -> q
    boolean fosterInserts -> r
    boolean fragmentParsing -> s
    boolean $assertionsDisabled -> a
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    boolean process(org.jsoup.parser.Token) -> a
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilderState) -> a
    void transition(org.jsoup.parser.HtmlTreeBuilderState) -> a
    org.jsoup.parser.HtmlTreeBuilderState state() -> a
    void markInsertionMode() -> b
    org.jsoup.parser.HtmlTreeBuilderState originalState() -> c
    void framesetOk(boolean) -> a
    boolean framesetOk() -> d
    org.jsoup.nodes.Document getDocument() -> e
    java.lang.String getBaseUri() -> f
    void maybeSetBaseUri(org.jsoup.nodes.Element) -> a
    boolean isFragmentParsing() -> g
    void error(org.jsoup.parser.HtmlTreeBuilderState) -> b
    org.jsoup.nodes.Element insert(org.jsoup.parser.Token$StartTag) -> a
    org.jsoup.nodes.Element insert(java.lang.String) -> a
    void insert(org.jsoup.nodes.Element) -> l
    org.jsoup.nodes.Element insertEmpty(org.jsoup.parser.Token$StartTag) -> b
    void insert(org.jsoup.parser.Token$Comment) -> a
    void insert(org.jsoup.parser.Token$Character) -> a
    void insertNode(org.jsoup.nodes.Node) -> b
    org.jsoup.nodes.Element pop() -> h
    void push(org.jsoup.nodes.Element) -> b
    org.jsoup.helper.DescendableLinkedList getStack() -> i
    boolean onStack(org.jsoup.nodes.Element) -> c
    boolean isElementInQueue(org.jsoup.helper.DescendableLinkedList,org.jsoup.nodes.Element) -> a
    org.jsoup.nodes.Element getFromStack(java.lang.String) -> b
    boolean removeFromStack(org.jsoup.nodes.Element) -> d
    void popStackToClose(java.lang.String) -> c
    void popStackToClose(java.lang.String[]) -> a
    void popStackToBefore(java.lang.String) -> d
    void clearStackToTableContext() -> j
    void clearStackToTableBodyContext() -> k
    void clearStackToTableRowContext() -> l
    void clearStackToContext(java.lang.String[]) -> c
    org.jsoup.nodes.Element aboveOnStack(org.jsoup.nodes.Element) -> e
    void insertOnStackAfter(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void replaceOnStack(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> b
    void replaceInQueue(java.util.LinkedList,org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    void resetInsertionMode() -> m
    boolean inSpecificScope(java.lang.String,java.lang.String[],java.lang.String[]) -> a
    boolean inSpecificScope(java.lang.String[],java.lang.String[],java.lang.String[]) -> a
    boolean inScope(java.lang.String[]) -> b
    boolean inScope(java.lang.String) -> e
    boolean inScope(java.lang.String,java.lang.String[]) -> a
    boolean inListItemScope(java.lang.String) -> f
    boolean inButtonScope(java.lang.String) -> g
    boolean inTableScope(java.lang.String) -> h
    boolean inSelectScope(java.lang.String) -> i
    void setHeadElement(org.jsoup.nodes.Element) -> f
    org.jsoup.nodes.Element getHeadElement() -> n
    void setFosterInserts(boolean) -> b
    org.jsoup.nodes.Element getFormElement() -> o
    void setFormElement(org.jsoup.nodes.Element) -> g
    void newPendingTableCharacters() -> p
    java.util.List getPendingTableCharacters() -> q
    void generateImpliedEndTags(java.lang.String) -> j
    void generateImpliedEndTags() -> r
    boolean isSpecial(org.jsoup.nodes.Element) -> h
    void pushActiveFormattingElements(org.jsoup.nodes.Element) -> i
    void reconstructFormattingElements() -> s
    void clearFormattingElementsToLastMarker() -> t
    void removeFromActiveFormattingElements(org.jsoup.nodes.Element) -> j
    boolean isInActiveFormattingElements(org.jsoup.nodes.Element) -> k
    org.jsoup.nodes.Element getActiveFormattingElement(java.lang.String) -> k
    void replaceActiveFormattingElement(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> c
    void insertMarkerToFormattingElements() -> u
    void insertInFosterParent(org.jsoup.nodes.Node) -> a
    java.lang.String toString() -> toString
org.jsoup.parser.HtmlTreeBuilderState -> org.jsoup.parser.c:
    org.jsoup.parser.HtmlTreeBuilderState Initial -> a
    org.jsoup.parser.HtmlTreeBuilderState BeforeHtml -> b
    org.jsoup.parser.HtmlTreeBuilderState BeforeHead -> c
    org.jsoup.parser.HtmlTreeBuilderState InHead -> d
    org.jsoup.parser.HtmlTreeBuilderState InHeadNoscript -> e
    org.jsoup.parser.HtmlTreeBuilderState AfterHead -> f
    org.jsoup.parser.HtmlTreeBuilderState InBody -> g
    org.jsoup.parser.HtmlTreeBuilderState Text -> h
    org.jsoup.parser.HtmlTreeBuilderState InTable -> i
    org.jsoup.parser.HtmlTreeBuilderState InTableText -> j
    org.jsoup.parser.HtmlTreeBuilderState InCaption -> k
    org.jsoup.parser.HtmlTreeBuilderState InColumnGroup -> l
    org.jsoup.parser.HtmlTreeBuilderState InTableBody -> m
    org.jsoup.parser.HtmlTreeBuilderState InRow -> n
    org.jsoup.parser.HtmlTreeBuilderState InCell -> o
    org.jsoup.parser.HtmlTreeBuilderState InSelect -> p
    org.jsoup.parser.HtmlTreeBuilderState InSelectInTable -> q
    org.jsoup.parser.HtmlTreeBuilderState AfterBody -> r
    org.jsoup.parser.HtmlTreeBuilderState InFrameset -> s
    org.jsoup.parser.HtmlTreeBuilderState AfterFrameset -> t
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterBody -> u
    org.jsoup.parser.HtmlTreeBuilderState AfterAfterFrameset -> v
    org.jsoup.parser.HtmlTreeBuilderState ForeignContent -> w
    java.lang.String nullString -> x
    org.jsoup.parser.HtmlTreeBuilderState[] $VALUES -> y
    org.jsoup.parser.HtmlTreeBuilderState[] values() -> values
    org.jsoup.parser.HtmlTreeBuilderState valueOf(java.lang.String) -> valueOf
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean access$100(org.jsoup.parser.Token) -> a
    void access$300(org.jsoup.parser.Token$StartTag,org.jsoup.parser.HtmlTreeBuilder) -> a
    java.lang.String access$400() -> a
org.jsoup.parser.HtmlTreeBuilderState$1 -> org.jsoup.parser.d:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$10 -> org.jsoup.parser.e:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$11 -> org.jsoup.parser.f:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$12 -> org.jsoup.parser.g:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$13 -> org.jsoup.parser.h:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean exitTableBody(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> c
org.jsoup.parser.HtmlTreeBuilderState$14 -> org.jsoup.parser.i:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    boolean handleMissingTr(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$15 -> org.jsoup.parser.j:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
    void closeCell(org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$16 -> org.jsoup.parser.k:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$17 -> org.jsoup.parser.l:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$18 -> org.jsoup.parser.m:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$19 -> org.jsoup.parser.n:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$2 -> org.jsoup.parser.o:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$20 -> org.jsoup.parser.p:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$21 -> org.jsoup.parser.q:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$22 -> org.jsoup.parser.r:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$23 -> org.jsoup.parser.s:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$24 -> org.jsoup.parser.t:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.parser.HtmlTreeBuilderState$3 -> org.jsoup.parser.u:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$4 -> org.jsoup.parser.v:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.TreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$5 -> org.jsoup.parser.w:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$6 -> org.jsoup.parser.x:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$7 -> org.jsoup.parser.y:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anyOtherEndTag(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.HtmlTreeBuilderState$8 -> org.jsoup.parser.z:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
org.jsoup.parser.HtmlTreeBuilderState$9 -> org.jsoup.parser.aa:
    boolean process(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> a
    boolean anythingElse(org.jsoup.parser.Token,org.jsoup.parser.HtmlTreeBuilder) -> b
org.jsoup.parser.ParseError -> org.jsoup.parser.ParseError:
    int pos -> a
    java.lang.String errorMsg -> b
    java.lang.String getErrorMessage() -> getErrorMessage
    int getPosition() -> getPosition
    java.lang.String toString() -> toString
org.jsoup.parser.ParseErrorList -> org.jsoup.parser.ab:
    int maxSize -> a
    boolean canAddError() -> a
    org.jsoup.parser.ParseErrorList noTracking() -> b
    org.jsoup.parser.ParseErrorList tracking(int) -> a
org.jsoup.parser.Parser -> org.jsoup.parser.Parser:
    org.jsoup.parser.TreeBuilder treeBuilder -> a
    int maxErrors -> b
    org.jsoup.parser.ParseErrorList errors -> c
    org.jsoup.nodes.Document parseInput(java.lang.String,java.lang.String) -> parseInput
    org.jsoup.parser.TreeBuilder getTreeBuilder() -> getTreeBuilder
    org.jsoup.parser.Parser setTreeBuilder(org.jsoup.parser.TreeBuilder) -> setTreeBuilder
    boolean isTrackErrors() -> isTrackErrors
    org.jsoup.parser.Parser setTrackErrors(int) -> setTrackErrors
    java.util.List getErrors() -> getErrors
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String) -> parse
    java.util.List parseFragment(java.lang.String,org.jsoup.nodes.Element,java.lang.String) -> parseFragment
    java.util.List parseXmlFragment(java.lang.String,java.lang.String) -> parseXmlFragment
    org.jsoup.nodes.Document parseBodyFragment(java.lang.String,java.lang.String) -> parseBodyFragment
    java.lang.String unescapeEntities(java.lang.String,boolean) -> unescapeEntities
    org.jsoup.nodes.Document parseBodyFragmentRelaxed(java.lang.String,java.lang.String) -> parseBodyFragmentRelaxed
    org.jsoup.parser.Parser htmlParser() -> htmlParser
    org.jsoup.parser.Parser xmlParser() -> xmlParser
org.jsoup.parser.Tag -> org.jsoup.parser.Tag:
    java.util.Map tags -> a
    java.lang.String tagName -> b
    boolean isBlock -> c
    boolean formatAsBlock -> d
    boolean canContainBlock -> e
    boolean canContainInline -> f
    boolean empty -> g
    boolean selfClosing -> h
    boolean preserveWhitespace -> i
    java.lang.String[] blockTags -> j
    java.lang.String[] inlineTags -> k
    java.lang.String[] emptyTags -> l
    java.lang.String[] formatAsInlineTags -> m
    java.lang.String[] preserveWhitespaceTags -> n
    java.lang.String getName() -> getName
    org.jsoup.parser.Tag valueOf(java.lang.String) -> valueOf
    boolean isBlock() -> isBlock
    boolean formatAsBlock() -> formatAsBlock
    boolean canContainBlock() -> canContainBlock
    boolean isInline() -> isInline
    boolean isData() -> isData
    boolean isEmpty() -> isEmpty
    boolean isSelfClosing() -> isSelfClosing
    boolean isKnownTag() -> isKnownTag
    boolean isKnownTag(java.lang.String) -> isKnownTag
    boolean preserveWhitespace() -> preserveWhitespace
    org.jsoup.parser.Tag setSelfClosing() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void register(org.jsoup.parser.Tag) -> a
org.jsoup.parser.Token -> org.jsoup.parser.ac:
    org.jsoup.parser.Token$TokenType type -> a
    boolean isDoctype() -> a
    boolean isStartTag() -> b
    boolean isEndTag() -> c
    boolean isComment() -> d
    boolean isCharacter() -> e
    boolean isEOF() -> f
org.jsoup.parser.Token$Character -> org.jsoup.parser.ad:
    java.lang.String data -> b
    java.lang.String getData() -> g
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Comment -> org.jsoup.parser.ae:
    java.lang.StringBuilder data -> b
    boolean bogus -> c
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Doctype -> org.jsoup.parser.af:
    java.lang.StringBuilder name -> b
    java.lang.StringBuilder publicIdentifier -> c
    java.lang.StringBuilder systemIdentifier -> d
    boolean forceQuirks -> e
org.jsoup.parser.Token$EOF -> org.jsoup.parser.ag:
org.jsoup.parser.Token$EndTag -> org.jsoup.parser.ah:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$StartTag -> org.jsoup.parser.ai:
    java.lang.String toString() -> toString
org.jsoup.parser.Token$Tag -> org.jsoup.parser.aj:
    java.lang.String tagName -> b
    java.lang.String pendingAttributeName -> e
    java.lang.StringBuilder pendingAttributeValue -> f
    boolean selfClosing -> c
    org.jsoup.nodes.Attributes attributes -> d
    void newAttribute() -> g
    void finaliseTag() -> h
    java.lang.String name() -> i
    org.jsoup.parser.Token$Tag name(java.lang.String) -> a
    void appendTagName(java.lang.String) -> b
    void appendTagName(char) -> a
    void appendAttributeName(java.lang.String) -> c
    void appendAttributeName(char) -> b
    void appendAttributeValue(java.lang.String) -> d
    void appendAttributeValue(char) -> c
    void appendAttributeValue(char[]) -> a
    void ensureAttributeValue() -> j
org.jsoup.parser.Token$TokenType -> org.jsoup.parser.ak:
    org.jsoup.parser.Token$TokenType Doctype -> a
    org.jsoup.parser.Token$TokenType StartTag -> b
    org.jsoup.parser.Token$TokenType EndTag -> c
    org.jsoup.parser.Token$TokenType Comment -> d
    org.jsoup.parser.Token$TokenType Character -> e
    org.jsoup.parser.Token$TokenType EOF -> f
    org.jsoup.parser.Token$TokenType[] $VALUES -> g
    org.jsoup.parser.Token$TokenType[] values() -> values
    org.jsoup.parser.Token$TokenType valueOf(java.lang.String) -> valueOf
org.jsoup.parser.TokenQueue -> org.jsoup.parser.TokenQueue:
    java.lang.String queue -> a
    int pos -> b
    boolean isEmpty() -> isEmpty
    int remainingLength() -> a
    char peek() -> peek
    void addFirst(java.lang.Character) -> addFirst
    void addFirst(java.lang.String) -> addFirst
    boolean matches(java.lang.String) -> matches
    boolean matchesCS(java.lang.String) -> matchesCS
    boolean matchesAny(java.lang.String[]) -> matchesAny
    boolean matchesAny(char[]) -> matchesAny
    boolean matchesStartTag() -> matchesStartTag
    boolean matchChomp(java.lang.String) -> matchChomp
    boolean matchesWhitespace() -> matchesWhitespace
    boolean matchesWord() -> matchesWord
    void advance() -> advance
    char consume() -> consume
    void consume(java.lang.String) -> consume
    java.lang.String consumeTo(java.lang.String) -> consumeTo
    java.lang.String consumeToIgnoreCase(java.lang.String) -> consumeToIgnoreCase
    java.lang.String consumeToAny(java.lang.String[]) -> consumeToAny
    java.lang.String chompTo(java.lang.String) -> chompTo
    java.lang.String chompToIgnoreCase(java.lang.String) -> chompToIgnoreCase
    java.lang.String chompBalanced(char,char) -> chompBalanced
    java.lang.String unescape(java.lang.String) -> unescape
    boolean consumeWhitespace() -> consumeWhitespace
    java.lang.String consumeWord() -> consumeWord
    java.lang.String consumeTagName() -> consumeTagName
    java.lang.String consumeElementSelector() -> consumeElementSelector
    java.lang.String consumeCssIdentifier() -> consumeCssIdentifier
    java.lang.String consumeAttributeKey() -> consumeAttributeKey
    java.lang.String remainder() -> remainder
    java.lang.String toString() -> toString
org.jsoup.parser.Tokeniser -> org.jsoup.parser.al:
    org.jsoup.parser.CharacterReader reader -> e
    org.jsoup.parser.ParseErrorList errors -> f
    org.jsoup.parser.TokeniserState state -> g
    org.jsoup.parser.Token emitPending -> h
    boolean isEmitPending -> i
    java.lang.StringBuilder charBuffer -> j
    java.lang.StringBuilder dataBuffer -> a
    org.jsoup.parser.Token$Tag tagPending -> b
    org.jsoup.parser.Token$Doctype doctypePending -> c
    org.jsoup.parser.Token$Comment commentPending -> d
    org.jsoup.parser.Token$StartTag lastStartTag -> k
    boolean selfClosingFlagAcknowledged -> l
    org.jsoup.parser.Token read() -> a
    void emit(org.jsoup.parser.Token) -> a
    void emit(java.lang.String) -> a
    void emit(char[]) -> a
    void emit(char) -> a
    void transition(org.jsoup.parser.TokeniserState) -> a
    void advanceTransition(org.jsoup.parser.TokeniserState) -> b
    void acknowledgeSelfClosingFlag() -> b
    char[] consumeCharacterReference(java.lang.Character,boolean) -> a
    org.jsoup.parser.Token$Tag createTagPending(boolean) -> a
    void emitTagPending() -> c
    void emitCommentPending() -> d
    void createDoctypePending() -> e
    void emitDoctypePending() -> f
    void createTempBuffer() -> g
    boolean isAppropriateEndTagToken() -> h
    java.lang.String appropriateEndTagName() -> i
    void error(org.jsoup.parser.TokeniserState) -> c
    void eofError(org.jsoup.parser.TokeniserState) -> d
    void characterReferenceError(java.lang.String) -> b
    void error(java.lang.String) -> c
    java.lang.String unescapeEntities(boolean) -> b
org.jsoup.parser.TokeniserState -> org.jsoup.parser.am:
    org.jsoup.parser.TokeniserState Data -> a
    org.jsoup.parser.TokeniserState CharacterReferenceInData -> b
    org.jsoup.parser.TokeniserState Rcdata -> c
    org.jsoup.parser.TokeniserState CharacterReferenceInRcdata -> d
    org.jsoup.parser.TokeniserState Rawtext -> e
    org.jsoup.parser.TokeniserState ScriptData -> f
    org.jsoup.parser.TokeniserState PLAINTEXT -> g
    org.jsoup.parser.TokeniserState TagOpen -> h
    org.jsoup.parser.TokeniserState EndTagOpen -> i
    org.jsoup.parser.TokeniserState TagName -> j
    org.jsoup.parser.TokeniserState RcdataLessthanSign -> k
    org.jsoup.parser.TokeniserState RCDATAEndTagOpen -> l
    org.jsoup.parser.TokeniserState RCDATAEndTagName -> m
    org.jsoup.parser.TokeniserState RawtextLessthanSign -> n
    org.jsoup.parser.TokeniserState RawtextEndTagOpen -> o
    org.jsoup.parser.TokeniserState RawtextEndTagName -> p
    org.jsoup.parser.TokeniserState ScriptDataLessthanSign -> q
    org.jsoup.parser.TokeniserState ScriptDataEndTagOpen -> r
    org.jsoup.parser.TokeniserState ScriptDataEndTagName -> s
    org.jsoup.parser.TokeniserState ScriptDataEscapeStart -> t
    org.jsoup.parser.TokeniserState ScriptDataEscapeStartDash -> u
    org.jsoup.parser.TokeniserState ScriptDataEscaped -> v
    org.jsoup.parser.TokeniserState ScriptDataEscapedDash -> w
    org.jsoup.parser.TokeniserState ScriptDataEscapedDashDash -> x
    org.jsoup.parser.TokeniserState ScriptDataEscapedLessthanSign -> y
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagOpen -> z
    org.jsoup.parser.TokeniserState ScriptDataEscapedEndTagName -> A
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeStart -> B
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscaped -> C
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDash -> D
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedDashDash -> E
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapedLessthanSign -> F
    org.jsoup.parser.TokeniserState ScriptDataDoubleEscapeEnd -> G
    org.jsoup.parser.TokeniserState BeforeAttributeName -> H
    org.jsoup.parser.TokeniserState AttributeName -> I
    org.jsoup.parser.TokeniserState AfterAttributeName -> J
    org.jsoup.parser.TokeniserState BeforeAttributeValue -> K
    org.jsoup.parser.TokeniserState AttributeValue_doubleQuoted -> L
    org.jsoup.parser.TokeniserState AttributeValue_singleQuoted -> M
    org.jsoup.parser.TokeniserState AttributeValue_unquoted -> N
    org.jsoup.parser.TokeniserState AfterAttributeValue_quoted -> O
    org.jsoup.parser.TokeniserState SelfClosingStartTag -> P
    org.jsoup.parser.TokeniserState BogusComment -> Q
    org.jsoup.parser.TokeniserState MarkupDeclarationOpen -> R
    org.jsoup.parser.TokeniserState CommentStart -> S
    org.jsoup.parser.TokeniserState CommentStartDash -> T
    org.jsoup.parser.TokeniserState Comment -> U
    org.jsoup.parser.TokeniserState CommentEndDash -> V
    org.jsoup.parser.TokeniserState CommentEnd -> W
    org.jsoup.parser.TokeniserState CommentEndBang -> X
    org.jsoup.parser.TokeniserState Doctype -> Y
    org.jsoup.parser.TokeniserState BeforeDoctypeName -> Z
    org.jsoup.parser.TokeniserState DoctypeName -> aa
    org.jsoup.parser.TokeniserState AfterDoctypeName -> ab
    org.jsoup.parser.TokeniserState AfterDoctypePublicKeyword -> ac
    org.jsoup.parser.TokeniserState BeforeDoctypePublicIdentifier -> ad
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_doubleQuoted -> ae
    org.jsoup.parser.TokeniserState DoctypePublicIdentifier_singleQuoted -> af
    org.jsoup.parser.TokeniserState AfterDoctypePublicIdentifier -> ag
    org.jsoup.parser.TokeniserState BetweenDoctypePublicAndSystemIdentifiers -> ah
    org.jsoup.parser.TokeniserState AfterDoctypeSystemKeyword -> ai
    org.jsoup.parser.TokeniserState BeforeDoctypeSystemIdentifier -> aj
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_doubleQuoted -> ak
    org.jsoup.parser.TokeniserState DoctypeSystemIdentifier_singleQuoted -> al
    org.jsoup.parser.TokeniserState AfterDoctypeSystemIdentifier -> am
    org.jsoup.parser.TokeniserState BogusDoctype -> an
    org.jsoup.parser.TokeniserState CdataSection -> ao
    java.lang.String replacementStr -> ap
    org.jsoup.parser.TokeniserState[] $VALUES -> aq
    org.jsoup.parser.TokeniserState[] values() -> values
    org.jsoup.parser.TokeniserState valueOf(java.lang.String) -> valueOf
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    java.lang.String access$100() -> a
org.jsoup.parser.TokeniserState$1 -> org.jsoup.parser.an:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$10 -> org.jsoup.parser.ao:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$11 -> org.jsoup.parser.ap:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$12 -> org.jsoup.parser.aq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$13 -> org.jsoup.parser.ar:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> b
org.jsoup.parser.TokeniserState$14 -> org.jsoup.parser.as:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$15 -> org.jsoup.parser.at:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$16 -> org.jsoup.parser.au:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$17 -> org.jsoup.parser.av:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$18 -> org.jsoup.parser.aw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$19 -> org.jsoup.parser.ax:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$2 -> org.jsoup.parser.ay:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$20 -> org.jsoup.parser.az:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$21 -> org.jsoup.parser.ba:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$22 -> org.jsoup.parser.bb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$23 -> org.jsoup.parser.bc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$24 -> org.jsoup.parser.bd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$25 -> org.jsoup.parser.be:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$26 -> org.jsoup.parser.bf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$27 -> org.jsoup.parser.bg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
    void anythingElse$541e49b(org.jsoup.parser.Tokeniser) -> a
org.jsoup.parser.TokeniserState$28 -> org.jsoup.parser.bh:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$29 -> org.jsoup.parser.bi:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$3 -> org.jsoup.parser.bj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$30 -> org.jsoup.parser.bk:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$31 -> org.jsoup.parser.bl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$32 -> org.jsoup.parser.bm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$33 -> org.jsoup.parser.bn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$34 -> org.jsoup.parser.bo:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$35 -> org.jsoup.parser.bp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$36 -> org.jsoup.parser.bq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$37 -> org.jsoup.parser.br:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$38 -> org.jsoup.parser.bs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$39 -> org.jsoup.parser.bt:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$4 -> org.jsoup.parser.bu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$40 -> org.jsoup.parser.bv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$41 -> org.jsoup.parser.bw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$42 -> org.jsoup.parser.bx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$43 -> org.jsoup.parser.by:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$44 -> org.jsoup.parser.bz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$45 -> org.jsoup.parser.ca:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$46 -> org.jsoup.parser.cb:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$47 -> org.jsoup.parser.cc:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$48 -> org.jsoup.parser.cd:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$49 -> org.jsoup.parser.ce:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$5 -> org.jsoup.parser.cf:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$50 -> org.jsoup.parser.cg:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$51 -> org.jsoup.parser.ch:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$52 -> org.jsoup.parser.ci:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$53 -> org.jsoup.parser.cj:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$54 -> org.jsoup.parser.ck:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$55 -> org.jsoup.parser.cl:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$56 -> org.jsoup.parser.cm:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$57 -> org.jsoup.parser.cn:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$58 -> org.jsoup.parser.co:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$59 -> org.jsoup.parser.cp:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$6 -> org.jsoup.parser.cq:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$60 -> org.jsoup.parser.cr:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$61 -> org.jsoup.parser.cs:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$62 -> org.jsoup.parser.ct:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$63 -> org.jsoup.parser.cu:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$64 -> org.jsoup.parser.cv:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$65 -> org.jsoup.parser.cw:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$66 -> org.jsoup.parser.cx:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$67 -> org.jsoup.parser.cy:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$7 -> org.jsoup.parser.cz:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$8 -> org.jsoup.parser.da:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TokeniserState$9 -> org.jsoup.parser.db:
    void read(org.jsoup.parser.Tokeniser,org.jsoup.parser.CharacterReader) -> a
org.jsoup.parser.TreeBuilder -> org.jsoup.parser.dc:
    org.jsoup.parser.CharacterReader reader -> b
    org.jsoup.parser.Tokeniser tokeniser -> c
    org.jsoup.nodes.Document doc -> d
    org.jsoup.helper.DescendableLinkedList stack -> e
    java.lang.String baseUri -> f
    org.jsoup.parser.Token currentToken -> g
    org.jsoup.parser.ParseErrorList errors -> h
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> b
    org.jsoup.nodes.Document parse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> a
    void runParser() -> v
    boolean process(org.jsoup.parser.Token) -> a
    org.jsoup.nodes.Element currentElement() -> w
org.jsoup.parser.XmlTreeBuilder -> org.jsoup.parser.XmlTreeBuilder:
    void initialiseParse(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> b
    boolean process(org.jsoup.parser.Token) -> a
    void insertNode(org.jsoup.nodes.Node) -> a
    java.util.List parseFragment(java.lang.String,java.lang.String,org.jsoup.parser.ParseErrorList) -> c
org.jsoup.parser.XmlTreeBuilder$1 -> org.jsoup.parser.dd:
    int[] $SwitchMap$org$jsoup$parser$Token$TokenType -> a
org.jsoup.safety.Cleaner -> org.jsoup.safety.Cleaner:
    org.jsoup.safety.Whitelist whitelist -> a
    org.jsoup.nodes.Document clean(org.jsoup.nodes.Document) -> clean
    boolean isValid(org.jsoup.nodes.Document) -> isValid
    int copySafeNodes(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> a
    org.jsoup.safety.Whitelist access$000(org.jsoup.safety.Cleaner) -> a
    org.jsoup.safety.Cleaner$ElementMeta access$100(org.jsoup.safety.Cleaner,org.jsoup.nodes.Element) -> a
org.jsoup.safety.Cleaner$CleaningVisitor -> org.jsoup.safety.a:
    int numDiscarded -> b
    org.jsoup.nodes.Element root -> c
    org.jsoup.nodes.Element destination -> d
    org.jsoup.safety.Cleaner this$0 -> a
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
    int access$300(org.jsoup.safety.Cleaner$CleaningVisitor) -> a
org.jsoup.safety.Cleaner$ElementMeta -> org.jsoup.safety.b:
    org.jsoup.nodes.Element el -> a
    int numAttribsDiscarded -> b
org.jsoup.safety.Whitelist -> org.jsoup.safety.Whitelist:
    java.util.Set tagNames -> a
    java.util.Map attributes -> b
    java.util.Map enforcedAttributes -> c
    java.util.Map protocols -> d
    boolean preserveRelativeLinks -> e
    org.jsoup.safety.Whitelist none() -> none
    org.jsoup.safety.Whitelist simpleText() -> simpleText
    org.jsoup.safety.Whitelist basic() -> basic
    org.jsoup.safety.Whitelist basicWithImages() -> basicWithImages
    org.jsoup.safety.Whitelist relaxed() -> relaxed
    org.jsoup.safety.Whitelist addTags(java.lang.String[]) -> addTags
    org.jsoup.safety.Whitelist addAttributes(java.lang.String,java.lang.String[]) -> addAttributes
    org.jsoup.safety.Whitelist addEnforcedAttribute(java.lang.String,java.lang.String,java.lang.String) -> addEnforcedAttribute
    org.jsoup.safety.Whitelist preserveRelativeLinks(boolean) -> preserveRelativeLinks
    org.jsoup.safety.Whitelist addProtocols(java.lang.String,java.lang.String,java.lang.String[]) -> addProtocols
    boolean isSafeTag(java.lang.String) -> a
    boolean isSafeAttribute(java.lang.String,org.jsoup.nodes.Element,org.jsoup.nodes.Attribute) -> a
    org.jsoup.nodes.Attributes getEnforcedAttributes(java.lang.String) -> b
org.jsoup.safety.Whitelist$AttributeKey -> org.jsoup.safety.c:
    org.jsoup.safety.Whitelist$AttributeKey valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$AttributeValue -> org.jsoup.safety.d:
org.jsoup.safety.Whitelist$Protocol -> org.jsoup.safety.e:
org.jsoup.safety.Whitelist$TagName -> org.jsoup.safety.f:
    org.jsoup.safety.Whitelist$TagName valueOf(java.lang.String) -> a
org.jsoup.safety.Whitelist$TypedValue -> org.jsoup.safety.g:
    java.lang.String value -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.jsoup.select.Collector -> org.jsoup.select.Collector:
    org.jsoup.select.Elements collect(org.jsoup.select.Evaluator,org.jsoup.nodes.Element) -> collect
org.jsoup.select.Collector$Accumulator -> org.jsoup.select.a:
    org.jsoup.nodes.Element root -> a
    org.jsoup.select.Elements elements -> b
    org.jsoup.select.Evaluator eval -> c
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.CombiningEvaluator -> org.jsoup.select.b:
    java.util.List evaluators -> a
    org.jsoup.select.Evaluator rightMostEvaluator() -> a
    void replaceRightMostEvaluator(org.jsoup.select.Evaluator) -> a
org.jsoup.select.CombiningEvaluator$And -> org.jsoup.select.c:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.CombiningEvaluator$Or -> org.jsoup.select.d:
    void add(org.jsoup.select.Evaluator) -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Elements -> org.jsoup.select.Elements:
    java.util.List contents -> a
    org.jsoup.select.Elements clone() -> clone
    java.lang.String attr(java.lang.String) -> attr
    boolean hasAttr(java.lang.String) -> hasAttr
    org.jsoup.select.Elements attr(java.lang.String,java.lang.String) -> attr
    org.jsoup.select.Elements removeAttr(java.lang.String) -> removeAttr
    org.jsoup.select.Elements addClass(java.lang.String) -> addClass
    org.jsoup.select.Elements removeClass(java.lang.String) -> removeClass
    org.jsoup.select.Elements toggleClass(java.lang.String) -> toggleClass
    boolean hasClass(java.lang.String) -> hasClass
    java.lang.String val() -> val
    org.jsoup.select.Elements val(java.lang.String) -> val
    java.lang.String text() -> text
    boolean hasText() -> hasText
    java.lang.String html() -> html
    java.lang.String outerHtml() -> outerHtml
    java.lang.String toString() -> toString
    org.jsoup.select.Elements tagName(java.lang.String) -> tagName
    org.jsoup.select.Elements html(java.lang.String) -> html
    org.jsoup.select.Elements prepend(java.lang.String) -> prepend
    org.jsoup.select.Elements append(java.lang.String) -> append
    org.jsoup.select.Elements before(java.lang.String) -> before
    org.jsoup.select.Elements after(java.lang.String) -> after
    org.jsoup.select.Elements wrap(java.lang.String) -> wrap
    org.jsoup.select.Elements unwrap() -> unwrap
    org.jsoup.select.Elements empty() -> empty
    org.jsoup.select.Elements remove() -> remove
    org.jsoup.select.Elements select(java.lang.String) -> select
    org.jsoup.select.Elements not(java.lang.String) -> not
    org.jsoup.select.Elements eq(int) -> eq
    boolean is(java.lang.String) -> is
    org.jsoup.select.Elements parents() -> parents
    org.jsoup.nodes.Element first() -> first
    org.jsoup.nodes.Element last() -> last
    org.jsoup.select.Elements traverse(org.jsoup.select.NodeVisitor) -> traverse
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(org.jsoup.nodes.Element) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    org.jsoup.nodes.Element get(int) -> get
    org.jsoup.nodes.Element set(int,org.jsoup.nodes.Element) -> set
    void add(int,org.jsoup.nodes.Element) -> add
    org.jsoup.nodes.Element remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object clone() -> clone
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean add(java.lang.Object) -> add
org.jsoup.select.Evaluator -> org.jsoup.select.Evaluator:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
org.jsoup.select.Evaluator$AllElements -> org.jsoup.select.Evaluator$AllElements:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Attribute -> org.jsoup.select.Evaluator$Attribute:
    java.lang.String key -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeKeyPair -> org.jsoup.select.Evaluator$AttributeKeyPair:
    java.lang.String key -> a
    java.lang.String value -> b
org.jsoup.select.Evaluator$AttributeStarting -> org.jsoup.select.Evaluator$AttributeStarting:
    java.lang.String keyPrefix -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValue -> org.jsoup.select.Evaluator$AttributeWithValue:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueContaining -> org.jsoup.select.Evaluator$AttributeWithValueContaining:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueEnding -> org.jsoup.select.Evaluator$AttributeWithValueEnding:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueMatching -> org.jsoup.select.Evaluator$AttributeWithValueMatching:
    java.lang.String key -> a
    java.util.regex.Pattern pattern -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueNot -> org.jsoup.select.Evaluator$AttributeWithValueNot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$AttributeWithValueStarting -> org.jsoup.select.Evaluator$AttributeWithValueStarting:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Class -> org.jsoup.select.Evaluator$Class:
    java.lang.String className -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsOwnText -> org.jsoup.select.Evaluator$ContainsOwnText:
    java.lang.String searchText -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$ContainsText -> org.jsoup.select.Evaluator$ContainsText:
    java.lang.String searchText -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$CssNthEvaluator -> org.jsoup.select.Evaluator$CssNthEvaluator:
    int a -> a
    int b -> b
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
    java.lang.String getPseudoClass() -> a
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
org.jsoup.select.Evaluator$Id -> org.jsoup.select.Evaluator$Id:
    java.lang.String id -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEquals -> org.jsoup.select.Evaluator$IndexEquals:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexEvaluator -> org.jsoup.select.Evaluator$IndexEvaluator:
    int index -> a
org.jsoup.select.Evaluator$IndexGreaterThan -> org.jsoup.select.Evaluator$IndexGreaterThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IndexLessThan -> org.jsoup.select.Evaluator$IndexLessThan:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsEmpty -> org.jsoup.select.Evaluator$IsEmpty:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstChild -> org.jsoup.select.Evaluator$IsFirstChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsFirstOfType -> org.jsoup.select.Evaluator$IsFirstOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastChild -> org.jsoup.select.Evaluator$IsLastChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsLastOfType -> org.jsoup.select.Evaluator$IsLastOfType:
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsNthChild -> org.jsoup.select.Evaluator$IsNthChild:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastChild -> org.jsoup.select.Evaluator$IsNthLastChild:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthLastOfType -> org.jsoup.select.Evaluator$IsNthLastOfType:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsNthOfType -> org.jsoup.select.Evaluator$IsNthOfType:
    int calculatePosition$296f3858(org.jsoup.nodes.Element) -> a
    java.lang.String getPseudoClass() -> a
org.jsoup.select.Evaluator$IsOnlyChild -> org.jsoup.select.Evaluator$IsOnlyChild:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsOnlyOfType -> org.jsoup.select.Evaluator$IsOnlyOfType:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$IsRoot -> org.jsoup.select.Evaluator$IsRoot:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Matches -> org.jsoup.select.Evaluator$Matches:
    java.util.regex.Pattern pattern -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$MatchesOwn -> org.jsoup.select.Evaluator$MatchesOwn:
    java.util.regex.Pattern pattern -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.Evaluator$Tag -> org.jsoup.select.Evaluator$Tag:
    java.lang.String tagName -> a
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.NodeTraversor -> org.jsoup.select.NodeTraversor:
    org.jsoup.select.NodeVisitor visitor -> a
    void traverse(org.jsoup.nodes.Node) -> traverse
org.jsoup.select.NodeVisitor -> org.jsoup.select.NodeVisitor:
    void head(org.jsoup.nodes.Node,int) -> head
    void tail(org.jsoup.nodes.Node,int) -> tail
org.jsoup.select.QueryParser -> org.jsoup.select.e:
    java.lang.String[] combinators -> a
    org.jsoup.parser.TokenQueue tq -> b
    java.lang.String query -> c
    java.util.List evals -> d
    java.util.regex.Pattern NTH_AB -> e
    java.util.regex.Pattern NTH_B -> f
    org.jsoup.select.Evaluator parse(java.lang.String) -> a
    void combinator(char) -> a
    void findElements() -> a
    void cssNthChild(boolean,boolean) -> a
    int consumeIndex() -> b
    void contains(boolean) -> a
    void matches(boolean) -> b
org.jsoup.select.Selector -> org.jsoup.select.Selector:
    org.jsoup.select.Evaluator evaluator -> a
    org.jsoup.nodes.Element root -> b
    org.jsoup.select.Elements select(java.lang.String,org.jsoup.nodes.Element) -> select
    org.jsoup.select.Elements select(java.lang.String,java.lang.Iterable) -> select
    org.jsoup.select.Elements filterOut(java.util.Collection,java.util.Collection) -> a
org.jsoup.select.Selector$SelectorParseException -> org.jsoup.select.Selector$SelectorParseException:
org.jsoup.select.StructuralEvaluator -> org.jsoup.select.f:
    org.jsoup.select.Evaluator evaluator -> a
org.jsoup.select.StructuralEvaluator$Has -> org.jsoup.select.g:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediateParent -> org.jsoup.select.h:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$ImmediatePreviousSibling -> org.jsoup.select.i:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Not -> org.jsoup.select.j:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Parent -> org.jsoup.select.k:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$PreviousSibling -> org.jsoup.select.l:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
    java.lang.String toString() -> toString
org.jsoup.select.StructuralEvaluator$Root -> org.jsoup.select.m:
    boolean matches(org.jsoup.nodes.Element,org.jsoup.nodes.Element) -> matches
